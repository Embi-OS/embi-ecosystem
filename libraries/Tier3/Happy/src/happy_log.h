#ifndef HAPPY_LOG_H
#define HAPPY_LOG_H

#include <QDebug>

#define HAPPYLOG_LEVEL_TRACE 0
#define HAPPYLOG_LEVEL_DEBUG 1
#define HAPPYLOG_LEVEL_INFO 2
#define HAPPYLOG_LEVEL_WARNING 3
#define HAPPYLOG_LEVEL_CRITICAL 4

#define HAPPYLOG_MIN_LEVEL HAPPYLOG_LEVEL_INFO

#define HAPPYLOG_NOTICE \
QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1C""HAPPY").debug

#define HAPPYLOG_TRACE \
    if(HAPPYLOG_MIN_LEVEL>HAPPYLOG_LEVEL_TRACE) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1B""HAPPY").debug
#define HAPPYLOG_DEBUG \
    if(HAPPYLOG_MIN_LEVEL>HAPPYLOG_LEVEL_DEBUG) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"HAPPY").debug
#define HAPPYLOG_INFO \
    if(HAPPYLOG_MIN_LEVEL>HAPPYLOG_LEVEL_INFO) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"HAPPY").info
#define HAPPYLOG_WARNING \
    if(HAPPYLOG_MIN_LEVEL>HAPPYLOG_LEVEL_WARNING) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"HAPPY").warning
#define HAPPYLOG_CRITICAL \
    if(HAPPYLOG_MIN_LEVEL>HAPPYLOG_LEVEL_CRITICAL) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"HAPPY").critical
#define HAPPYLOG_FATAL \
    QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"HAPPY").fatal

#endif // HAPPY_LOG_H
