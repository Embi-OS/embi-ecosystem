#ifndef REST_LOG_H
#define REST_LOG_H

#include <QDebug>

#define RESTLOG_LEVEL_TRACE 0
#define RESTLOG_LEVEL_DEBUG 1
#define RESTLOG_LEVEL_INFO 2
#define RESTLOG_LEVEL_WARNING 3
#define RESTLOG_LEVEL_CRITICAL 4

#define RESTLOG_MIN_LEVEL RESTLOG_LEVEL_INFO

#define RESTLOG_NOTICE \
QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1C""REST").debug

#define RESTLOG_TRACE \
    if(RESTLOG_MIN_LEVEL>RESTLOG_LEVEL_TRACE) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1B""REST").debug
#define RESTLOG_DEBUG \
    if(RESTLOG_MIN_LEVEL>RESTLOG_LEVEL_DEBUG) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"REST").debug
#define RESTLOG_INFO \
    if(RESTLOG_MIN_LEVEL>RESTLOG_LEVEL_INFO) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"REST").info
#define RESTLOG_WARNING \
    if(RESTLOG_MIN_LEVEL>RESTLOG_LEVEL_WARNING) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"REST").warning
#define RESTLOG_CRITICAL \
    if(RESTLOG_MIN_LEVEL>RESTLOG_LEVEL_CRITICAL) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"REST").critical
#define RESTLOG_FATAL \
    QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"REST").fatal

#endif // REST_LOG_H
