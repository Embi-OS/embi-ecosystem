#ifndef SQL_LOG_H
#define SQL_LOG_H

#include <QDebug>

#define SQLLOG_LEVEL_TRACE 0
#define SQLLOG_LEVEL_DEBUG 1
#define SQLLOG_LEVEL_INFO 2
#define SQLLOG_LEVEL_WARNING 3
#define SQLLOG_LEVEL_CRITICAL 4

#define SQLLOG_MIN_LEVEL SQLLOG_LEVEL_INFO

#define SQLLOG_NOTICE \
QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1C""SQL").debug

#define SQLLOG_TRACE \
    if(SQLLOG_MIN_LEVEL>SQLLOG_LEVEL_TRACE) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1B""SQL").debug
#define SQLLOG_DEBUG \
    if(SQLLOG_MIN_LEVEL>SQLLOG_LEVEL_DEBUG) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SQL").debug
#define SQLLOG_INFO \
    if(SQLLOG_MIN_LEVEL>SQLLOG_LEVEL_INFO) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SQL").info
#define SQLLOG_WARNING \
    if(SQLLOG_MIN_LEVEL>SQLLOG_LEVEL_WARNING) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SQL").warning
#define SQLLOG_CRITICAL \
    if(SQLLOG_MIN_LEVEL>SQLLOG_LEVEL_CRITICAL) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SQL").critical
#define SQLLOG_FATAL \
    QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SQL").fatal

#endif // SQL_LOG_H
